{"version":3,"sources":["../../../src/php/url/base64_decode.js"],"names":["module","exports","base64_decode","encodedData","window","atob","decodeURIComponent","encodeURIComponent","Buffer","toString","b64","o1","o2","o3","h1","h2","h3","h4","bits","i","ac","dec","tmpArr","indexOf","charAt","String","fromCharCode","length","join","replace"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,aAAT,CAAwBC,WAAxB,EAAqC;AAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAI,OAAOA,OAAOC,IAAd,KAAuB,WAA3B,EAAwC;AACtC,aAAOC,mBAAmBC,mBAAmBH,OAAOC,IAAP,CAAYF,WAAZ,CAAnB,CAAnB,CAAP;AACD;AACF,GAJD,MAIO;AACL,WAAO,IAAIK,MAAJ,CAAWL,WAAX,EAAwB,QAAxB,EAAkCM,QAAlC,CAA2C,OAA3C,CAAP;AACD;;AAED,MAAIC,MAAM,mEAAV;AACA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,KAAK,CAAT;AACA,MAAIC,MAAM,EAAV;AACA,MAAIC,SAAS,EAAb;;AAEA,MAAI,CAACnB,WAAL,EAAkB;AAChB,WAAOA,WAAP;AACD;;AAEDA,iBAAe,EAAf;;AAEA,KAAG;AACD;AACAW,SAAKJ,IAAIa,OAAJ,CAAYpB,YAAYqB,MAAZ,CAAmBL,GAAnB,CAAZ,CAAL;AACAJ,SAAKL,IAAIa,OAAJ,CAAYpB,YAAYqB,MAAZ,CAAmBL,GAAnB,CAAZ,CAAL;AACAH,SAAKN,IAAIa,OAAJ,CAAYpB,YAAYqB,MAAZ,CAAmBL,GAAnB,CAAZ,CAAL;AACAF,SAAKP,IAAIa,OAAJ,CAAYpB,YAAYqB,MAAZ,CAAmBL,GAAnB,CAAZ,CAAL;;AAEAD,WAAOJ,MAAM,EAAN,GAAWC,MAAM,EAAjB,GAAsBC,MAAM,CAA5B,GAAgCC,EAAvC;;AAEAN,SAAKO,QAAQ,EAAR,GAAa,IAAlB;AACAN,SAAKM,QAAQ,CAAR,GAAY,IAAjB;AACAL,SAAKK,OAAO,IAAZ;;AAEA,QAAIF,OAAO,EAAX,EAAe;AACbM,aAAOF,IAAP,IAAeK,OAAOC,YAAP,CAAoBf,EAApB,CAAf;AACD,KAFD,MAEO,IAAIM,OAAO,EAAX,EAAe;AACpBK,aAAOF,IAAP,IAAeK,OAAOC,YAAP,CAAoBf,EAApB,EAAwBC,EAAxB,CAAf;AACD,KAFM,MAEA;AACLU,aAAOF,IAAP,IAAeK,OAAOC,YAAP,CAAoBf,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,CAAf;AACD;AACF,GApBD,QAoBSM,IAAIhB,YAAYwB,MApBzB;;AAsBAN,QAAMC,OAAOM,IAAP,CAAY,EAAZ,CAAN;;AAEA,SAAOtB,mBAAmBC,mBAAmBc,IAAIQ,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAnB,CAAnB,CAAP;AACD,CAvED","file":"base64_decode.js","sourcesContent":["module.exports = function base64_decode (encodedData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.atob !== 'undefined') {\n      return decodeURIComponent(encodeURIComponent(window.atob(encodedData)))\n    }\n  } else {\n    return new Buffer(encodedData, 'base64').toString('utf-8')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var dec = ''\n  var tmpArr = []\n\n  if (!encodedData) {\n    return encodedData\n  }\n\n  encodedData += ''\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++))\n    h2 = b64.indexOf(encodedData.charAt(i++))\n    h3 = b64.indexOf(encodedData.charAt(i++))\n    h4 = b64.indexOf(encodedData.charAt(i++))\n\n    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4\n\n    o1 = bits >> 16 & 0xff\n    o2 = bits >> 8 & 0xff\n    o3 = bits & 0xff\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1)\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2)\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3)\n    }\n  } while (i < encodedData.length)\n\n  dec = tmpArr.join('')\n\n  return decodeURIComponent(encodeURIComponent(dec.replace(/\\0+$/, '')))\n}\n"]}